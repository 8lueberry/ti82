export type BinaryPixel = boolean

export type CharacterIndex = string
export type CharacterDecimal = number
export type CharacterBinaryPixel = BinaryPixel[] // 6x8 pixels

export const CHARACTER_WIDTH = 6
export const CHARACTER_HEIGHT = 8

/**
 * 48 bit numbers (6x8 pixels)
 */
const map: Record<CharacterIndex, CharacterDecimal> = {
  0: 61083746304,
  1: 214470044102400,
  2: 30916945664,
  3: 26833455835008,
  4: 214470044101760,
  5: 1125757550592,
  6: 37175566532608,
  7: 30550901248,
  8: 18288107226112,
  9: 2358076645376,
  10: 475119616,
  11: 141590528,
  12: 2097152,
  13: 943784960,
  14: 105853837377536,
  15: 276029977594880,
  16: 62131141706240,
  17: 26579439190016,
  18: 105836859883520,
  19: 2216759168,
  20: 108066074787840,
  21: 196847477981184,
  22: 123703784374272,
  23: 9672468205440,
  24: 17933786481664,
  25: 142393609293696,
  26: 15032385536,
  27: 32488097664,
  28: 555092049920,
  29: 50107952000,
  30: 37153750942208,
  31: 35742863180288,
  32: 0,
  33: 35742852088320,
  34: 89356794593280,
  35: 89402243630336,
  36: 71773266640896,
  37: 214546639905152,
  38: 73160752514688,
  39: 35742717837312,
  40: 18159394390272,
  41: 70922863150080,
  42: 595333775360,
  43: 559388065792,
  44: 6325248,
  45: 1040187392,
  46: 99840,
  47: 141872463872,
  48: 125523284600576,
  49: 36842365814528,
  50: 125483981279104,
  51: 272962419304192,
  52: 18438914851072,
  53: 274942365673216,
  54: 53911445186304,
  55: 272820756087808,
  56: 125518750557952,
  57: 125518775600640,
  58: 1675043635200,
  59: 1675043570688,
  60: 18159662825728,
  61: 66588246016,
  62: 70922829595648,
  63: 125483981210112,
  64: 125527644047232,
  65: 125519320983680,
  66: 266256775786240,
  67: 125516669658880,
  68: 266256339578624,
  69: 274913281838976,
  70: 274913281837056,
  71: 125516905064320,
  72: 151907600050304,
  73: 123703784408832,
  74: 61851892336128,
  75: 152051248154752,
  76: 142971416743808,
  77: 153290243975296,
  78: 151924445423744,
  79: 125518851221248,
  80: 266256775251968,
  81: 125518853326464,
  82: 266256777365632,
  83: 134175248625408,
  84: 273237365785088,
  85: 151907130287872,
  86: 151907130229248,
  87: 151907266635008,
  88: 151891658025088,
  89: 151906888483328,
  90: 272820756156288,
  91: 54051065185792,
  92: 2216338399232,
  93: 106111598364160,
  94: 36595268845568,
  95: 3968,
  96: 35738422870016,
  97: 30106331008,
  98: 142984604167936,
  99: 30610171648,
  100: 8962095851392,
  101: 30651582208,
  102: 54031632368640,
  103: 2098669823744,
  104: 142984604166272,
  105: 35210278242048,
  106: 17605139252736,
  107: 71487925077120,
  108: 106111598364416,
  109: 56550369408,
  110: 48092555392,
  111: 30644250368,
  112: 65010796544,
  113: 28562694272,
  114: 48092022784,
  115: 30608994048,
  116: 71528658051840,
  117: 37086717568,
  118: 37086642688,
  119: 37088830720,
  120: 36844947584,
  121: 37085521664,
  122: 66641268608,
  123: 26946895380864,
  124: 35742854185472,
  125: 211664647523328,
  126: 1144675893248,
  127: 276977047826304,
  128: 475088156,
  129: 140542472,
  130: 403735580,
  131: 403734808,
  132: 273793284,
  133: 474054936,
  134: 205636892,
  135: 470844432,
  136: 475120924,
  137: 475119896,
  138: 283946659746,
  139: 1108580380578,
  140: 571238133666,
  141: 1374868352930,
  142: 283938252958,
  143: 1108571973790,
  144: 571701061790,
  145: 1374859946142,
  146: 284516665406,
  147: 1109150386238,
  148: 572279474238,
  149: 1375438358590,
  150: 283946772508,
  151: 1108580493340,
  152: 571709581340,
  153: 1374868465692,
  154: 283939734044,
  155: 1108573454876,
  156: 571702542876,
  157: 1374861427228,
  158: 283474166300,
  159: 1108107887132,
  160: 571236975132,
  161: 1374395859484,
  162: 283946657948,
  163: 1108580378780,
  164: 571709466780,
  165: 1374868351132,
  166: 283475323036,
  167: 1108109043868,
  168: 571238131868,
  169: 1374397016220,
  170: 284047321244,
  171: 1108681042076,
  172: 571239704732,
  173: 1374969014428,
  174: 284047321498,
  175: 1108681042330,
  176: 571239704986,
  177: 1374969014682,
  178: 1961198469688,
  179: 478291768,
  180: 709253310882,
  181: 708681345186,
  182: 141868138496,
  183: 2216337342464,
  184: 21474836480,
  185: 549894359196,
  186: 558347878920,
  187: 445794586,
  188: 844270478508,
  189: 313016580,
  190: 2181310,
  191: 841948981404,
  192: 478398492,
  193: 833360003596,
  194: 17315185826,
  195: 613568160,
  196: 1045513510,
  197: 13191726112,
  198: 4277922726974,
  199: 512903448,
  200: 513835652,
  201: 558826635784,
  202: 1961231992118,
  203: 4261183259938,
  204: 4261187018908,
  205: 691657506816,
  206: 42,
  207: 4503683328,
  208: 954433536,
  209: 279242146832,
  210: 7340032,
  211: 1928914386944,
  212: 1946089947136,
  213: 1653697773568,
  214: 26172556800,
  215: 742992164,
  216: 18135352320,
  217: 4328236249022,
  218: 4319165509046,
  219: 4319303346878,
  220: 4319575977150,
  221: 62,
  222: 580527358014,
  223: 571705737278,
  224: 554257399870,
  225: 2908402918698,
  226: 954433536,
  227: 954433536,
  228: 954433536,
  229: 954433536,
  230: 954433536,
  231: 954433536,
  232: 954433536,
  233: 954433536,
  234: 954433536,
  235: 954433536,
  236: 954433536,
  237: 954433536,
  238: 954433536,
  239: 954433536,
  240: 954433536,
  241: 954433536,
  242: 954433536,
  243: 954433536,
  244: 954433536,
  245: 954433536,
  246: 954433536,
  247: 954433536,
  248: 954433536,
  249: 954433536,
  250: 954433536,
  251: 954433536,
  252: 954433536,
  253: 954433536,
  254: 954433536,
  255: 954433536,
}

function decimalToCharacter(decimal: CharacterDecimal) {
  const result: CharacterBinaryPixel = decimal
    .toString(2) // to binary
    .padStart(48, '0') // ensure full 48 bits
    .split('') // to array of characters
    .map((p) => p !== '0') // to arrays of bit (boolean)

  return result
}

export function buildCharacterMap() {
  const result = Object.entries(map).reduce<Record<CharacterIndex, CharacterBinaryPixel>>((acc, [k, p]) => {
    acc[k] = decimalToCharacter(p)
    return acc
  }, {})

  return result
}
